stages:

  - stage: deploy_mlops_infrastructure
    displayName: Deploy MLOps Infrastructure
    dependsOn:
      - publish_IaC_templates
    variables:
      - group: 'mlops_platform_infra_dev_vg'
    jobs:
    - job: Deploy_MLOps_v2_Infrastructure  
      steps:
      - script: |
          echo 'See the contents of parameters passed in'
          echo '$(AZURE_RM_SVC_CONNECTION)'
          echo '$(TF_RESOURCE_GROUP_NAME)'
          echo '$(TF_TFSTATE_RESOURCE_GROUP_NAME)'          
          echo '$(TF_TFSTATE_STORAGE_ACCT)' 
          echo '$(TF_STORAGE_ACCT)'
          echo '$(TF_KEYVAULT_NAME)'
          echo '$(TF_APPINSIGHTS_NAME)'
          echo '$(TF_CONTAINER_REGISTRY_NAME)'          
          echo '$(TF_WORKSPACE_NAME)'
          echo '$(LOCATION)'

        enabled: true

      - task: qetza.replacetokens.replacetokens-task.replacetokens@5
        inputs:
          rootDirectory: '$(System.DefaultWorkingDirectory)/infra/terraform/public_workspace'
          targetFiles: '*.tfvars'
          encoding: 'auto'
          tokenPattern: 'custom'
          writeBOM: true
          actionOnMissing: 'warn'
          keepToken: false
          actionOnNoFiles: 'continue'
          enableTransforms: true
          transformPrefix: '#{'
          transformSuffix: '}#'
          enableRecursion: false
          useLegacyPattern: false
          enableTelemetry: false
        enabled: true 

      - task: AzureCLI@2
        displayName: Add tfstate resource group
        inputs:
          azureSubscription: '$(AZURE_RM_SVC_CONNECTION)'
          scriptType: pscore
          scriptLocation: inlineScript
          useGlobalConfig: false
          inlineScript: |
            az --version
            az group create --location '$(LOCATION)' --name '$(TF_TFSTATE_RESOURCE_GROUP_NAME)'
        enabled: true

      - task: AzureCLI@2
        displayName: Add tfstate account
        inputs:
          azureSubscription: '$(AZURE_RM_SVC_CONNECTION)'
          scriptType: pscore
          scriptLocation: inlineScript
          useGlobalConfig: false
          inlineScript: |
            az --version
            az storage account create --name '$(TF_TFSTATE_STORAGE_ACCT)' --resource-group '$(TF_TFSTATE_RESOURCE_GROUP_NAME)' --sku Standard_LRS
        enabled: true

      - task: AzureCLI@2
        displayName: Add terraform container
        inputs:
          azureSubscription: '$(AZURE_RM_SVC_CONNECTION)'
          scriptType: pscore
          scriptLocation: inlineScript
          useGlobalConfig: false
          inlineScript: |
            az --version
            az storage container create --name terraform --account-name '$(TF_TFSTATE_STORAGE_ACCT)'
        enabled: true

      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@1
        displayName: 'Terraform Install'
        inputs:
          terraformVersion: 'latest'
        enabled: true


      - task: TerraformTaskV4@4
        displayName: 'Terraform Init'
        inputs:
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/infra/terraform/public_workspace'
          backendServiceArm: '$(AZURE_RM_SVC_CONNECTION)'
          ensureBackend: true
          backendAzureRmResourceGroupName: '$(TF_TFSTATE_RESOURCE_GROUP_NAME)'
          backendAzureRmStorageAccountName: '$(TF_TFSTATE_STORAGE_ACCT)' 
          backendAzureRmContainerName: terraform
          backendAzureRmKey: mlops.tfstate
        enabled: true

      - task: TerraformTaskV4@4
        displayName: 'Terraform Validate'
        inputs:
          command: 'validate'
          workingDirectory: '$(System.DefaultWorkingDirectory)/infra/terraform/public_workspace'
        enabled: true

      - task: TerraformTaskV4@4
        displayName: 'Terraform Plan'
        inputs:
          command: 'plan'
          workingDirectory: '$(System.DefaultWorkingDirectory)/infra/terraform/public_workspace'
          allowTelemetryCollection: true
          environmentServiceNameAzureRM: '$(AZURE_RM_SVC_CONNECTION)'
          commandOptions: '-out=tfplan'
        enabled: true

      - task: TerraformTaskV4@4
        displayName: 'Terraform Apply'
        inputs:
          provider: 'azurerm'
          command: 'apply'
          workingDirectory: '$(System.DefaultWorkingDirectory)/infra/terraform/public_workspace'
          environmentServiceNameAzureRM: '$(AZURE_RM_SVC_CONNECTION)'
          commandOptions: '-auto-approve -input=false  tfplan'
        enabled: true
