
parameters:
 - name: exec_environment
   displayName: "Execution Environment"
   default: "dev"
 - name: model_type
   displayName: "type of model to execute"

stages:
    - stage: execute_training_job
      displayName: execute_training_job
      jobs:
      - job: Execute_ml_Job_Pipeline
        steps:
        - template: configure_azureml_agent.yml
        - template: execute_python_code.yml
          parameters:
            step_name: "Execute Azure ML pipeline job"
            script_parameter: |
              python -m mlops.${{ parameters.model_type }}.src.mlops_pipeline \
                --build_environment ${{parameters.exec_environment}} \
                --wait_for_completion True \
                --output_file run_id.txt
        - task: AzureCLI@2
          displayName: Read Run ID
          name: read_run_id
          inputs:
            azureSubscription: $(AZURE_RM_SVC_CONNECTION)
            scriptType: bash
            scriptLocation: inlineScript
            workingDirectory: $(System.DefaultWorkingDirectory)
            inlineScript: |
              readarray arr <"run_id.txt"
              run_name=${arr[0]}
              echo $run_name
              echo "##vso[task.setvariable variable=RUN_NAME;isOutput=true;]$run_name"

              python -m mlops.common.get_run_metadata \
                --run_id $run_name \
                --output_file_name metadata.txt
              
              readarray arr <"metadata.txt"
              metadata=${arr[0]}
              echo $metadata
              echo "##vso[task.setvariable variable=RUN_METADATA;isOutput=true;]$metadata"

    - stage: deploy
      displayName: Execute_local_deployment
      dependsOn: 
      - execute_training_job
      variables:
      - name: run_id_from_submit_job
        value: $[ stageDependencies.execute_training_job.Execute_ml_Job_Pipeline.outputs['read_run_id.RUN_NAME'] ]
      - name: run_metadata_from_submit_job
        value: $[ stageDependencies.execute_training_job.Execute_ml_Job_Pipeline.outputs['read_run_id.RUN_METADATA'] ]
      jobs:
      # Deployment into Dev environment should be done automatically
      # We are asking approval after that to decide if we need to publish
      # artifacts and models for CD pipeline
      - template: model_deployment.yml  # Template reference
        parameters:
          MODEL_TYPE: ${{ parameters.model_type }}
          DEPLOY_ENVIRONMENT: ${{parameters.exec_environment}} 
          RUN_ID: $(run_id_from_submit_job)

      - job: ApproveDeployment
        displayName: Approve for Model Deployment  
        pool: server    
        timeoutInMinutes: 60 # job times out in 60 minutes
        steps:   
        - task: ManualValidation@0
          timeoutInMinutes: 60 # task times out in 60 minutes
          inputs:
            instructions: "$(run_metadata_from_submit_job)"
            onTimeout: 'reject'

# TODO: Add a "production ready" tag to the model in te case of approval.
