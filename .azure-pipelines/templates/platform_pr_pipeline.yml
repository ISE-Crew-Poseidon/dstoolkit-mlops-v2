stages:
  - stage: build_validation
    displayName: Build Validation
    jobs:
      - template: build_validation_pipeline.yml

  - stage: execute_training_job
    displayName: Execute Training Job
    dependsOn: build_validation
    jobs:
      - job: Execute_ml_Job_Pipeline
        displayName: Execute Azure ML Pipeline Job
        variables:
          experiment_run_id: ''
        steps:
          - template: configure_azureml_agent.yml

          - script: |
              python -m mlops.${{ parameters.model_type }}.src.mlops_pipeline \
                --build_environment ${{ parameters.exec_environment }} \
                --wait_for_completion True
            displayName: "Execute Azure ML Pipeline Job"
        outputs:
          experiment_run_id: Execute_ml_Job_Pipeline.experiment_run_id

  - stage: cleanup
    displayName: Cleanup
    dependsOn: execute_training_job
    condition: always()
    jobs:
      - job: CancelAMLPipeline
        displayName: Cancel AML Pipeline if Necessary
        steps:
          - task: AzureCLI@2
            displayName: "Cancel AML Pipeline"
            inputs:
              azureSubscription: $(AZURE_RM_SVC_CONNECTION)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                if [ "$(Agent.JobStatus)" == "Canceled" ]; then
                  echo "Pipeline was canceled. Attempting to cancel AML Pipeline..."
                  az ml pipeline cancel --ids $(execute_training_job.outputs['execute_training_job.experiment_run_id'])
                else
                  echo "Pipeline completed normally. No need to cancel AML Pipeline."
                fi
