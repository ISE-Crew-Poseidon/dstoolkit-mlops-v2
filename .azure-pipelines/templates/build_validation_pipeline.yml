parameters:
  - name: image_name
    displayName: "Name of the Docker image"

jobs:
- job: BuildJob
  displayName: Build Job
  pool:
    vmImage: ubuntu-latest
  steps:
    - script: |
        echo "Building an image with tag: ${{ parameters.image_name }}"
      displayName: 'Building an image'

    # - task: Docker@2
    #   displayName: Build an image
    #   inputs:
    #     command: build
    #     Dockerfile: mlops/custom_objectdetection/environment/Dockerfile
    #     tags: |
    #       ${{ parameters.image_name }}
    
# - job: RunInContainer
#   displayName: Run in Container
#   dependsOn: BuildJob
#   pool:
#     vmImage: ubuntu-latest
#   container: 
#     image: ${{ parameters.image_name }}
#   steps:
#     - script: |
#         python -m pip install --upgrade pip &&
#         pip install -r .azure-pipelines/requirements/build_validation_requirements.txt &&
#         flake8 . &&
#         pytest --junitxml=junit/test-results.xml --cov=. --cov-report=xml

    - script: |
        echo "Building Docker container for validation"
        docker build -t ${{ parameters.image_name }} -f mlops/custom_objectdetection/environment/Dockerfile .
      displayName: 'Build Docker container'

    - script: |
        echo "Running Docker container for validation"
        docker run --rm ${{ parameters.image_name }} /bin/bash -c "
          pytest --junitxml=junit/test-results.xml --cov=. --cov-report=xml
        "
      displayName: 'Run tests in Docker container'

    - script: |
        python -m pip install --upgrade pip &&
        pip install -r $(Build.SourcesDirectory)/.azure-pipelines/requirements/build_validation_requirements.txt &&
        flake8 . &&
      displayName: 'Install dependencies and run linting'
      # TODO move before docker tasks

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: '**/test-*.xml'
        testRunTitle: 'Publish Test Results for Python $(python.version)'